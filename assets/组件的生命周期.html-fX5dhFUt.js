import{_ as e,c as t,d as s,o as n}from"./app-8R3ww4JW.js";const a={};function l(o,i){return n(),t("div",null,i[0]||(i[0]=[s(`<h1 id="组件的生命周期与hooks" tabindex="-1"><a class="header-anchor" href="#组件的生命周期与hooks"><span>组件的生命周期与HOOKs</span></a></h1><h2 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期"><span>生命周期</span></a></h2><h3 id="包括什么" tabindex="-1"><a class="header-anchor" href="#包括什么"><span>包括什么？</span></a></h3><p>组件从创建，挂载到更新再到销毁的过程。</p><p>每个生命周期包括两个钩子。</p><p>创建，挂载前，挂载后，更新前，更新完毕，卸载前，卸载后(vue3)</p><blockquote><p>vue3的创建过程合在了setup内，因此没有两个钩子</p></blockquote><h3 id="对应的函数" tabindex="-1"><a class="header-anchor" href="#对应的函数"><span>对应的函数</span></a></h3><ol><li>onBeforeMount(()=&gt;{}),参数为一个回调函数，在挂载前自动执行。</li><li>onMounted(()=&gt;{}),参数为一个回调函数，在挂载后自动执行。</li><li>onBeforeUpdate(()=&gt;{}),参数为一个回调函数，在更新前自动执行。</li><li>onUpdated(()=&gt;{}),参数为一个回调函数，在更新后自动执行。</li><li>onBeforeUnmount(()=&gt;{}),参数为一个回调函数，在卸载前自动执行。</li><li>onUnmounted(()=&gt;{}),参数为一个回调函数，在卸载后自动执行。</li></ol><h3 id="note-有父子组件时" tabindex="-1"><a class="header-anchor" href="#note-有父子组件时"><span>Note：有父子组件时</span></a></h3><p>先解析子组件再解析父组件。按顺序，当解析到子组件时，需要解析好子组件后才能够把父组件解析完成。</p><hr><h2 id="hooks" tabindex="-1"><a class="header-anchor" href="#hooks"><span>Hooks</span></a></h2><p>hook有助于模块化的开发，便于封装和抽象</p><hr><p>当在一个组件里面有很多的逻辑的时候：</p><div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> setup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	//功能1的data</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	//功能2的data</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	//......</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	//功能1的method</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	//功能2的method</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	//.....</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实际上我们可以将多个功能分开，放在一个hooks文件夹下，创建useFunction1.ts, useFunction2.ts等文件</p><p>在这些文件里分别导出对应的data和method即可，然后在vue组件中接收即可。</p>`,19)]))}const p=e(a,[["render",l],["__file","组件的生命周期.html.vue"]]),r=JSON.parse('{"path":"/posts/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E7%BB%84%E4%BB%B6%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html","title":"组件的生命周期","lang":"zh-CN","frontmatter":{"title":"组件的生命周期","date":"2025-01-21T00:00:00.000Z","description":"组件的生命周期与HOOKs 生命周期 包括什么？ 组件从创建，挂载到更新再到销毁的过程。 每个生命周期包括两个钩子。 创建，挂载前，挂载后，更新前，更新完毕，卸载前，卸载后(vue3) vue3的创建过程合在了setup内，因此没有两个钩子 对应的函数 onBeforeMount(()=>{}),参数为一个回调函数，在挂载前自动执行。 onMounte...","head":[["meta",{"property":"og:url","content":"https://github.com/yama-lei/yama-lei.github.io/posts/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E7%BB%84%E4%BB%B6%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html"}],["meta",{"property":"og:site_name","content":"Myblog"}],["meta",{"property":"og:title","content":"组件的生命周期"}],["meta",{"property":"og:description","content":"组件的生命周期与HOOKs 生命周期 包括什么？ 组件从创建，挂载到更新再到销毁的过程。 每个生命周期包括两个钩子。 创建，挂载前，挂载后，更新前，更新完毕，卸载前，卸载后(vue3) vue3的创建过程合在了setup内，因此没有两个钩子 对应的函数 onBeforeMount(()=>{}),参数为一个回调函数，在挂载前自动执行。 onMounte..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-21T12:52:33.000Z"}],["meta",{"property":"article:published_time","content":"2025-01-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-21T12:52:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"组件的生命周期\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-21T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-21T12:52:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yama-lei\\",\\"url\\":\\"/underbuilding.html\\"}]}"]]},"headers":[{"level":2,"title":"生命周期","slug":"生命周期","link":"#生命周期","children":[{"level":3,"title":"包括什么？","slug":"包括什么","link":"#包括什么","children":[]},{"level":3,"title":"对应的函数","slug":"对应的函数","link":"#对应的函数","children":[]},{"level":3,"title":"Note：有父子组件时","slug":"note-有父子组件时","link":"#note-有父子组件时","children":[]}]},{"level":2,"title":"Hooks","slug":"hooks","link":"#hooks","children":[]}],"git":{"createdTime":1737463953000,"updatedTime":1737463953000,"contributors":[{"name":"yama-lei","username":"yama-lei","email":"1908777046@qq.com","commits":1,"url":"https://github.com/yama-lei"}]},"readingTime":{"minutes":1.31,"words":392},"filePathRelative":"posts/前端开发/组件的生命周期.md","localizedDate":"2025年1月21日","excerpt":"\\n<h2>生命周期</h2>\\n<h3>包括什么？</h3>\\n<p>组件从创建，挂载到更新再到销毁的过程。</p>\\n<p>每个生命周期包括两个钩子。</p>\\n<p>创建，挂载前，挂载后，更新前，更新完毕，卸载前，卸载后(vue3)</p>\\n<blockquote>\\n<p>vue3的创建过程合在了setup内，因此没有两个钩子</p>\\n</blockquote>\\n<h3>对应的函数</h3>\\n<ol>\\n<li>onBeforeMount(()=&gt;{}),参数为一个回调函数，在挂载前自动执行。</li>\\n<li>onMounted(()=&gt;{}),参数为一个回调函数，在挂载后自动执行。</li>\\n<li>onBeforeUpdate(()=&gt;{}),参数为一个回调函数，在更新前自动执行。</li>\\n<li>onUpdated(()=&gt;{}),参数为一个回调函数，在更新后自动执行。</li>\\n<li>onBeforeUnmount(()=&gt;{}),参数为一个回调函数，在卸载前自动执行。</li>\\n<li>onUnmounted(()=&gt;{}),参数为一个回调函数，在卸载后自动执行。</li>\\n</ol>","autoDesc":true}');export{p as comp,r as data};
