import{_ as i,c as t,d as a,o as s}from"./app-OYQg825M.js";const n={};function l(p,e){return s(),t("div",null,e[0]||(e[0]=[a('<p>[TOC]</p><h2 id="第一讲-基本运算部件" tabindex="-1"><a class="header-anchor" href="#第一讲-基本运算部件"><span>第一讲 | 基本运算部件</span></a></h2><p>想要实现高级语言程序设计的各种运算，需要将表达式转换成指令。</p><p>比如</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> a,b</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将数据以<code>补码</code>的形式存入寄存器中。指令-&gt;汇编-&gt;机器指令。</p><hr><p>所有的运算都可以通过ALU+逻辑部件实现。</p><h4 id="串行-行波-进位加法器" tabindex="-1"><a class="header-anchor" href="#串行-行波-进位加法器"><span>串行(行波)进位加法器:</span></a></h4><h2 id="第二讲-定点数运算" tabindex="-1"><a class="header-anchor" href="#第二讲-定点数运算"><span>第二讲 | 定点数运算</span></a></h2><h2 id="第三讲-浮点数运算" tabindex="-1"><a class="header-anchor" href="#第三讲-浮点数运算"><span>第三讲 | 浮点数运算</span></a></h2>',11)]))}const h=i(n,[["render",l],["__file","运算方法和运算部件.html.vue"]]),d=JSON.parse('{"path":"/posts/NJUCS/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%BF%90%E7%AE%97%E6%96%B9%E6%B3%95%E5%92%8C%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6.html","title":"运算方法和运算部件","lang":"zh-CN","frontmatter":{"title":"运算方法和运算部件","description":"[TOC] 第一讲 | 基本运算部件 想要实现高级语言程序设计的各种运算，需要将表达式转换成指令。 比如 将数据以补码的形式存入寄存器中。指令->汇编->机器指令。 所有的运算都可以通过ALU+逻辑部件实现。 串行(行波)进位加法器: 第二讲 | 定点数运算 第三讲 | 浮点数运算","head":[["meta",{"property":"og:url","content":"https://github.com/yama-lei/yama-lei.github.io/posts/NJUCS/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E4%B8%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/%E8%BF%90%E7%AE%97%E6%96%B9%E6%B3%95%E5%92%8C%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6.html"}],["meta",{"property":"og:site_name","content":"Myblog"}],["meta",{"property":"og:title","content":"运算方法和运算部件"}],["meta",{"property":"og:description","content":"[TOC] 第一讲 | 基本运算部件 想要实现高级语言程序设计的各种运算，需要将表达式转换成指令。 比如 将数据以补码的形式存入寄存器中。指令->汇编->机器指令。 所有的运算都可以通过ALU+逻辑部件实现。 串行(行波)进位加法器: 第二讲 | 定点数运算 第三讲 | 浮点数运算"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-26T01:37:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-26T01:37:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"运算方法和运算部件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-26T01:37:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yama-lei\\",\\"url\\":\\"/underbuilding.html\\"}]}"]]},"headers":[{"level":2,"title":"第一讲 | 基本运算部件","slug":"第一讲-基本运算部件","link":"#第一讲-基本运算部件","children":[]},{"level":2,"title":"第二讲 | 定点数运算","slug":"第二讲-定点数运算","link":"#第二讲-定点数运算","children":[]},{"level":2,"title":"第三讲 | 浮点数运算","slug":"第三讲-浮点数运算","link":"#第三讲-浮点数运算","children":[]}],"git":{"createdTime":1742953027000,"updatedTime":1742953027000,"contributors":[{"name":"yama-lei","username":"yama-lei","email":"1908777046@qq.com","commits":1,"url":"https://github.com/yama-lei"}]},"readingTime":{"minutes":0.4,"words":120},"filePathRelative":"posts/NJUCS/数字逻辑与计算机组成/运算方法和运算部件.md","localizedDate":"2025年3月26日","excerpt":"<p>[TOC]</p>\\n<h2>第一讲 | 基本运算部件</h2>\\n<p>想要实现高级语言程序设计的各种运算，需要将表达式转换成指令。</p>\\n<p>比如</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"cpp\\" data-title=\\"cpp\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">int</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> a,b</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">=</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">5</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{h as comp,d as data};
