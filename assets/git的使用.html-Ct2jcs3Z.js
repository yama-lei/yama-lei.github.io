import{_ as e,c as a,d as s,o as n}from"./app-bkDzIhCE.js";const t={};function l(d,i){return n(),a("div",null,i[0]||(i[0]=[s(`<h2 id="git基本使用quick-start" tabindex="-1"><a class="header-anchor" href="#git基本使用quick-start"><span>git基本使用Quick Start</span></a></h2><figure><img src="https://www.runoob.com/wp-content/uploads/2015/02/git-command.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="安装与初始化" tabindex="-1"><a class="header-anchor" href="#安装与初始化"><span>安装与初始化</span></a></h3><p>从官网下载git，之后从终端中输入下面两条指令，设置名字和邮箱</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git config --global &quot;name&quot;</span></span>
<span class="line"><span>git config --global &quot;email&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意: name 和 Email 是用英文双引号包裹起来的</strong></p><h3 id="初始化一个仓库" tabindex="-1"><a class="header-anchor" href="#初始化一个仓库"><span>初始化一个仓库</span></a></h3><p>1.从零开始：在你想要创建项目的地方打开终端，输入git init</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git init //从头开始</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>2.直接clone别人的仓库：在目标文件夹打开终端，使用git clone +仓库名</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git clone https://github.com/yama-lei/yama-lei.github.io.git  \`</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里的url可以直接点开仓库右上角的绿色“code”按钮，下面可以直接复制</p><h3 id="连接远程仓库" tabindex="-1"><a class="header-anchor" href="#连接远程仓库"><span>连接远程仓库</span></a></h3><p>命令行中输入：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git remote add origin https://github.com/yama-lei/yama-lei.github.io.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>第一次连接需要配置SSH key</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>ssh-keygen -t rsa -b 4096 -C &quot;github 注册账号&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>接下来按照提示，保存SSH key，设置密码（也可以不设置）。<br> 依次执行：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>eval &quot;$(ssh-agent -s)&quot;</span></span>
<span class="line"><span>ssh-add ~/.ssh/id_rsa</span></span>
<span class="line"><span>cat ~/.ssh/id_rsa.pub</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>就会在终端中输出ssh-rsa开头的SSH key,复制这段输出。<br> github-&gt;点开头像-&gt;出现的侧边栏中间有个setting-&gt;点开后会进入到设置，找到&quot;SSH and GPG keys&quot;-&gt;在SSH key右侧有个绿色按钮“Add SSh ey”</p><h3 id="如何更新远程的仓库" tabindex="-1"><a class="header-anchor" href="#如何更新远程的仓库"><span>如何更新远程的仓库？</span></a></h3><p>在本地修改了文件后，可以直接“一键三连”</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git add .</span></span>
<span class="line"><span>git commit</span></span>
<span class="line"><span>git push origin main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里三个指令分别代表了三个操作：</p><h4 id="_1-将文件添加到暂存区-staging-area" tabindex="-1"><a class="header-anchor" href="#_1-将文件添加到暂存区-staging-area"><span>1. 将文件添加到暂存区(staging area)</span></a></h4><p>如果只修改/添加某个文件，可以使用</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git add filename</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>指定那个名叫‘filename’的文件<br> 如果嫌麻烦，直接</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git add .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>但是请注意！！！ add后面有个点&#39; . &#39;</p><h4 id="_2-将暂存区的文件提交到本地仓库" tabindex="-1"><a class="header-anchor" href="#_2-将暂存区的文件提交到本地仓库"><span>2. 将暂存区的文件提交到本地仓库</span></a></h4><p>使用指令：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git commit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果想要在提交的时候，备注上更新什么内容，可以用下面这个</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git commit -m &quot;本次更新解决了提出bug的用户&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>加上这个备注 ，有助于清晰地了解各个版本修改的内容，如果出现了什么问题，可以回溯之前的版本，提高了是错成本，避免因为某处错误而导致整个项目崩溃。</p><h4 id="_3-将本地仓库的文件提交到远程仓库-即上文中连接的github仓库" tabindex="-1"><a class="header-anchor" href="#_3-将本地仓库的文件提交到远程仓库-即上文中连接的github仓库"><span>3. 将本地仓库的文件提交到远程仓库（即上文中连接的github仓库）</span></a></h4><p>将本地仓库里的内容push到远程仓库的xx分支（如果没有特殊改变分支，一般是main分支）</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git push origin branchname</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="如何回溯过往版本" tabindex="-1"><a class="header-anchor" href="#如何回溯过往版本"><span>如何回溯过往版本？</span></a></h3><h4 id="_1-查询提交记录" tabindex="-1"><a class="header-anchor" href="#_1-查询提交记录"><span>1.查询提交记录</span></a></h4><p>使用git log来获取到提交记录,下面是我某一次博客的部分修改日志<br> 输入</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>commit adf721c24faa3f355468ae5400fd63f6f193a942 (HEAD -&gt; main, origin/main)</span></span>
<span class="line"><span>Author: yama-lei &lt;1908777046@qq.com&gt;</span></span>
<span class="line"><span>Date:   Thu Jan 16 10:39:33 2025 +0800</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    add a new game: 2048</span></span>
<span class="line"><span></span></span>
<span class="line"><span>commit 7933b8b303b170ab0cf360ce4d5e3f8de37b972d</span></span>
<span class="line"><span>Author: yama-lei &lt;1908777046@qq.com&gt;</span></span>
<span class="line"><span>Date:   Wed Jan 15 15:41:58 2025 +0800</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    add mores blogs and created some new demos</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，日志的内容呈现倒叙：最后提交的内容在最上面。<br> 每一次的提交都会有commit、Author、Date<br> commit是这一次提交的唯一标识。<br> Author是前文设置的name和email，date为日期。</p><h4 id="_2-切换到历史提交记录" tabindex="-1"><a class="header-anchor" href="#_2-切换到历史提交记录"><span>2.切换到历史提交记录</span></a></h4><p>运行</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git checkout commit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以回到原先某一次（由对应commit决定）的状态。<br> 再把commit换成main即可回到原先的main分支</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git checkout main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_3-恢复历史记录" tabindex="-1"><a class="header-anchor" href="#_3-恢复历史记录"><span>3. 恢复历史记录</span></a></h4><p>将某次历史记录保存在暂存区：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git reset --soft commit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将历史记录彻底覆盖</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git reset --hard commit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>这里的commit说的都是前文提到过的唯一标识</p></blockquote><h4 id="_4-切换分支" tabindex="-1"><a class="header-anchor" href="#_4-切换分支"><span>4.切换分支</span></a></h4><p>列出所有的分支</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git branch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>创建并进入某个新分支</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git checkout -b branchname</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>合并分支(将名为&#39;branchname&#39;的分支合并到main分支)</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git merge branchname</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>删除分支</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git branch -d branchname</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_5-如何merge代码" tabindex="-1"><a class="header-anchor" href="#_5-如何merge代码"><span>5.如何merge代码？</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fetch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //拉取</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> merge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin/main</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //将代码和本地的进行合并</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><video width="320" height="240" controls><source src="https://yamapicgo.oss-cn-nanjing.aliyuncs.com/picgoImage/202503011711518.mp4" type="video/mp4"></video><h3 id="fork别的仓库" tabindex="-1"><a class="header-anchor" href="#fork别的仓库"><span>fork别的仓库</span></a></h3><p>下面是deepseek对于fork的描述：</p><ul><li><p>Fork 的仓库是你的独立副本，修改不会影响原仓库。</p></li><li><p>Fork 的仓库<strong>不会自动同步</strong>原仓库的更新，需要手动同步。</p></li><li><p>你可以通过命令行或网页端将原仓库的更新同步到你的 Fork 仓库。</p></li><li><p>如果你想贡献代码，可以通过 Pull Request 提交更改。</p></li></ul><h2 id="github-page" tabindex="-1"><a class="header-anchor" href="#github-page"><span>github page</span></a></h2><p>github提供了部署静态网页相对简单的一个方案--github page</p><h2 id="github-action" tabindex="-1"><a class="header-anchor" href="#github-action"><span>github action</span></a></h2><p>github action是一个工作流(workflow)</p>`,76)]))}const h=e(t,[["render",l],["__file","git的使用.html.vue"]]),p=JSON.parse('{"path":"/posts/git%E7%9A%84%E4%BD%BF%E7%94%A8.html","title":"github入门--the missing class for cs learner","lang":"zh-CN","frontmatter":{"date":"2025-01-13T00:00:00.000Z","star":true,"title":"github入门--the missing class for cs learner","description":"git基本使用Quick Start 安装与初始化 从官网下载git，之后从终端中输入下面两条指令，设置名字和邮箱 注意: name 和 Email 是用英文双引号包裹起来的 初始化一个仓库 1.从零开始：在你想要创建项目的地方打开终端，输入git init 2.直接clone别人的仓库：在目标文件夹打开终端，使用git clone +仓库名 这里的u...","head":[["meta",{"property":"og:url","content":"https://github.com/yama-lei/yama-lei.github.io/posts/git%E7%9A%84%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"Myblog"}],["meta",{"property":"og:title","content":"github入门--the missing class for cs learner"}],["meta",{"property":"og:description","content":"git基本使用Quick Start 安装与初始化 从官网下载git，之后从终端中输入下面两条指令，设置名字和邮箱 注意: name 和 Email 是用英文双引号包裹起来的 初始化一个仓库 1.从零开始：在你想要创建项目的地方打开终端，输入git init 2.直接clone别人的仓库：在目标文件夹打开终端，使用git clone +仓库名 这里的u..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.runoob.com/wp-content/uploads/2015/02/git-command.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-05T12:18:18.000Z"}],["meta",{"property":"article:published_time","content":"2025-01-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-05T12:18:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"github入门--the missing class for cs learner\\",\\"image\\":[\\"https://www.runoob.com/wp-content/uploads/2015/02/git-command.jpg\\"],\\"datePublished\\":\\"2025-01-13T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-05T12:18:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yama-lei\\",\\"url\\":\\"/underbuilding.html\\"}]}"]]},"headers":[{"level":2,"title":"git基本使用Quick Start","slug":"git基本使用quick-start","link":"#git基本使用quick-start","children":[{"level":3,"title":"安装与初始化","slug":"安装与初始化","link":"#安装与初始化","children":[]},{"level":3,"title":"初始化一个仓库","slug":"初始化一个仓库","link":"#初始化一个仓库","children":[]},{"level":3,"title":"连接远程仓库","slug":"连接远程仓库","link":"#连接远程仓库","children":[]},{"level":3,"title":"如何更新远程的仓库？","slug":"如何更新远程的仓库","link":"#如何更新远程的仓库","children":[]},{"level":3,"title":"如何回溯过往版本？","slug":"如何回溯过往版本","link":"#如何回溯过往版本","children":[]},{"level":3,"title":"5.如何merge代码？","slug":"_5-如何merge代码","link":"#_5-如何merge代码","children":[]},{"level":3,"title":"fork别的仓库","slug":"fork别的仓库","link":"#fork别的仓库","children":[]}]},{"level":2,"title":"github page","slug":"github-page","link":"#github-page","children":[]},{"level":2,"title":"github action","slug":"github-action","link":"#github-action","children":[]}],"git":{"createdTime":1736753141000,"updatedTime":1741177098000,"contributors":[{"name":"yama-lei","username":"yama-lei","email":"1908777046@qq.com","commits":5,"url":"https://github.com/yama-lei"}]},"readingTime":{"minutes":3.78,"words":1133},"filePathRelative":"posts/git的使用.md","localizedDate":"2025年1月13日","excerpt":"<h2>git基本使用Quick Start</h2>\\n<figure><img src=\\"https://www.runoob.com/wp-content/uploads/2015/02/git-command.jpg\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<h3>安装与初始化</h3>\\n<p>从官网下载git，之后从终端中输入下面两条指令，设置名字和邮箱</p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>git config --global \\"name\\"</span></span>\\n<span class=\\"line\\"><span>git config --global \\"email\\"</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{h as comp,p as data};
